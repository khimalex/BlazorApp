@page "/basement"
@using BlazorApp.Data
@inject BasementService BasementService
@inject HttpClient HttpClient

<PageTitle>Basement</PageTitle>

<h1>Погреб статистика по @(varietyStatistic == "" ? "всем сортам" : "сорту " + varietyStatistic)</h1>

<label for="name">Сорт</label>

<InputSelect
        ValueExpression="@(()=>varietyStatistic)"
        Value="@varietyStatistic"
        ValueChanged="@((string value) => OnValueChanged(value))">
                <option value="">Все сорта</option>
                <option value="Гала">Гала</option>
                <option value="Голден">Голден</option>
</InputSelect>

<table class="table">
<thead>
        <tr>
        <th></th>
        <th></th>
        </tr>
</thead>
<tbody>
        <tr>
                <td>Количество яблок в погребе:</td>
                <td>@result?.AppleAmount</td>
        </tr>
        <tr>
                <td>Общее количество корзин в погребе:</td>
                <td>@result?.BucketAmount</td>
        </tr>
        <tr>
                <td>Общая масса всех яблок в погребе:</td>
                <td>@result?.Weight</td>
        </tr>
        <tr>
                <td>Средняя масса одного яблока:</td>
                <td>@(Double.IsNaN(result.AverageWeight) ? "-" : result.AverageWeight)</td>
        </tr>
</tbody>
</table>

<h1/>

<h1>Добавить новую корзину:</h1>

<label for="name">Количество яблок:</label>

<InputNumber @bind-Value="amountNewBucket" />

<p></p>

<label for="name">Сорт</label>

<InputSelect @bind-Value="varietyNewBucket" >
        <option value="Гала">Гала</option>
        <option value="Голден">Голден</option>
</InputSelect>

<p></p>

<button class="btn btn-primary" @onclick="AddBucket">Add bucket</button>

@code {
    private Result result;

    private string varietyStatistic = ""; //

    private int amountNewBucket;
    private string varietyNewBucket = "Гала"; // TODO: Fix initializing

    protected override async Task OnInitializedAsync()
    {
        UpdateResult();
    }

    private void UpdateResult(string variety = null)
    {
        result = BasementService.GetResult(varietyStatistic);
    }

    private async Task AddBucket()
    {
        var weightModel = await HttpClient.GetFromJsonAsync<WeightModel>("https://mock.justanother.app/weight");

        BasementService.Add(new Bucket
        {
                Weight = weightModel.Weight,
                Amount = amountNewBucket,
                Variety = varietyNewBucket,
        });

        UpdateResult();
    }

     private void OnValueChanged(string value)
        {
                varietyStatistic = value;
                UpdateResult(value);
        }

    class WeightModel
    {
        public double Weight { get; set; }
    }
}
